comparing to writing a bc like program , i prefer to design an simple shell because it's more like an apue assignment since it has more connections with the kernel.
well to implementing it i mainly followed this tutorial from gnu official site: Implementing a Job Control Shell--http://www.gnu.org/software/libc/manual/html_node/Implementing-a-Shell.html#Implementing-a-Shell.
It provide many fundamental datastructures and funtcions, but no complete solution, further more it provides well organized and detailed instructions and annotations for beginners to comprehend the mechanism and relations between diffrent functionality modules.
Also i refered other simple shell implementations mainly for their argument parse and main function designs. the most complecated parts i meet is the background support. At the end it performs far from ideal.
I missed the environment variable requirement at the beginning and added an half completed support -- users can only set the proper varible before launching the shell to get the function working.
I chose this coure because i worked under linux for more than a year and really enjoyed this OS, like its stability, powerful features, its history, openning culture and bright future. Learning this system you will understand ervery respect of an OS. I've learnt the network protocol stack implemetation of the unix kernel and it helps me a lot in current work, so i want to learn more. I always regret that i fell behind the course's progress weeks after the beginning since lack of persistence and time. But i still learnt a lot about file system, I/O, progress and thread,concurrency, etc.Thoung almost none is going deep enough, but i am sure it won't be long before all l those knowledge benifit me and i will start to go deeper into those points then.
Thank the APUE author and Mr.Lee.
